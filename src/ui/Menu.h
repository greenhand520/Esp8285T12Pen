//
// Created by mdmbct on 10/4/22.
//

#ifndef ESP8285HEAT_MENU_H

#include <Arduino.h>

struct Menu {
    uint8_t index;
//    uint8_t previousIndex;
//    uint8_t nextIndex;
    uint8_t confirmIndex;
    uint8_t nextIndex;
    char *name;

    void (*drawFun)();
};

const uint8_t homeIco[] PROGMEM = {
        0x00, 0xE0, 0x07, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x7C, 0x3E, 0x00, 0x00, 0x3E,
        0x7C, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x80, 0x0F, 0xF0, 0x01, 0xC0, 0x07, 0xE0, 0x03,
        0xE0, 0x03, 0xC0, 0x07, 0xF0, 0x01, 0x80, 0x0F, 0xF8, 0x00, 0x00, 0x1F, 0x7C, 0x00, 0x00, 0x3E, 0x3E, 0x00,
        0x00, 0x7C, 0x1F, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0xE0,
        0x3F, 0x00, 0x00, 0xFC, 0x7F, 0x00, 0x00, 0xFE, 0x7E, 0xE0, 0x07, 0x7E, 0x78, 0xF0, 0x0F, 0x1E, 0x78, 0xF0,
        0x0F, 0x1E, 0x78, 0x70, 0x0E, 0x1E, 0x78, 0x70, 0x0E, 0x1E, 0x78, 0x70, 0x0E, 0x1E,
        0x78, 0x70, 0x0E, 0x1E, 0x78, 0x70, 0x0E, 0x1E, 0x78, 0x70, 0x0E, 0x1E, 0xF0, 0x7F, 0xFE, 0x0F, 0xE0, 0x3F,
        0xFC, 0x07, 0xF0, 0x7F, 0xFE, 0x0F, 0xF0, 0x7F, 0xFE, 0x0F, 0xE0, 0x7F, 0xFE, 0x07};

const uint8_t settingIco[] PROGMEM = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0xE0,
        0x07, 0x00, 0x00, 0xE1, 0x87, 0x00, 0x80, 0xE7, 0xC7, 0x03, 0xC0, 0xFF, 0xFF, 0x03,
        0xC0, 0xFF, 0xFF, 0x07, 0xC0, 0xFF, 0xFF, 0x03, 0xC0, 0xFF, 0xFF, 0x03, 0x80, 0x3F, 0xFC, 0x01, 0x80, 0x1F,
        0xF0, 0x01, 0xF0, 0x0F, 0xF0, 0x0F, 0xF8, 0x07, 0xE0, 0x1F, 0xF8, 0x07, 0xE0, 0x1F,
        0xF8, 0x07, 0x00, 0x00, 0xF8, 0x07, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x80, 0x3F,
        0x00, 0x00, 0x80, 0xFF, 0x00, 0x00, 0xC0, 0xFF, 0x80, 0x07, 0xE0, 0xFF, 0xC0, 0x0F,
        0xC0, 0xFF, 0xC0, 0x0F, 0xC0, 0xE7, 0xC0, 0x0F, 0x00, 0xE1, 0xC0, 0x0F, 0x00, 0xE0, 0x80, 0x07, 0x00, 0xC0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const uint8_t tipConfigIco[] PROGMEM = {
        0x80, 0xC7, 0xE3, 0x01, 0x80, 0xC7, 0xE3, 0x01, 0xF8, 0xFF, 0xFF, 0x1F, 0xFC, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF,
        0xFF, 0x3F, 0xBC, 0xC7, 0xE3, 0x39, 0xBC, 0xC7, 0xE3, 0x39, 0x3C, 0x00, 0x00, 0x38,
        0x3C, 0x00, 0x00, 0x38, 0x3C, 0x00, 0x00, 0x38, 0x3C, 0x03, 0x00, 0x38, 0xBC, 0xEF, 0xFF, 0x39, 0xBC, 0xEF,
        0xFF, 0x39, 0x3C, 0xC7, 0xFF, 0x39, 0x3C, 0x00, 0x00, 0x38, 0x3C, 0x00, 0x00, 0x38,
        0x3C, 0x03, 0x00, 0x38, 0xBC, 0xEF, 0x3F, 0x38, 0xBC, 0xE7, 0x3F, 0x38, 0x3C, 0xC7, 0x1F, 0x38, 0x3C, 0x00,
        0x00, 0x38, 0x3C, 0x00, 0x00, 0x38, 0x3C, 0x07, 0x00, 0x38, 0xBC, 0xEF, 0xFF, 0x39,
        0x3C, 0xE7, 0xFF, 0x39, 0x3C, 0xE7, 0xFF, 0x39, 0x3C, 0x00, 0x00, 0x38, 0x3C, 0x00, 0x00, 0x38, 0xFC, 0xFF,
        0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0xFF, 0x3F, 0xF8, 0xFF, 0xFF, 0x1F};

/*const uint8_t hardwareInfoIco[] PROGMEM = {
        0x00, 0x21, 0x84, 0x00, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21,
        0x84, 0x00, 0xE0, 0xFF, 0xFF, 0x07, 0xE0, 0xFF, 0xFF, 0x07, 0x60, 0x00, 0x00, 0x06,
        0x7F, 0x00, 0x00, 0xFE, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE,
        0x7F, 0x06, 0x7F, 0xFE, 0x7F, 0xFE, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06,
        0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06, 0x7F, 0xFE, 0x7F, 0xFE, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE,
        0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06, 0x60, 0xFE, 0x7F, 0x06, 0x7F, 0x00, 0x00, 0xFE,
        0x60, 0x00, 0x00, 0x06, 0xE0, 0xFF, 0xFF, 0x07, 0xE0, 0xFF, 0xFF, 0x07, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21,
        0x84, 0x00, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21, 0x84, 0x00, 0x00, 0x21, 0x84, 0x00};*/

const uint8_t aboutIco[] PROGMEM = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0xFC,
        0x3F, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x80, 0x07, 0xE0, 0x01, 0xC0, 0x03, 0xC0, 0x03,
        0xE0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x0E, 0x30, 0x80, 0x07, 0x0C, 0x38, 0x80,
        0x07, 0x1C, 0x38, 0x00, 0x02, 0x1C, 0x18, 0x00, 0x03, 0x18, 0x18, 0xC0, 0x03, 0x18,
        0x18, 0xE0, 0x03, 0x18, 0x18, 0x80, 0x03, 0x18, 0x38, 0xC0, 0x01, 0x1C, 0x38, 0xC0, 0x01, 0x1C, 0x30, 0xC0,
        0x07, 0x0C, 0x70, 0xC0, 0x03, 0x0E, 0xE0, 0xC0, 0x01, 0x0F, 0xE0, 0x00, 0x00, 0x07,
        0xC0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x80, 0x03, 0x00, 0x3F, 0x00, 0x07, 0x00, 0xFC, 0xFF, 0x0F, 0x00, 0xF0,
        0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define NO_MENU 255
// 确定操作 不进行界面切换
#define CONFIRM 254

// 界面切换
Menu homeSw = {0, 4, 1, "HOME"};
Menu settingsSw = {1, 5, 2, "SETTINGS"};
Menu aboutSw = {2, 6, 3, "ABOUT"};
Menu tipConfSw = {3, 7, 0, "TIP CONFIG"};

// 不同界面
Menu homeScr = {4, 4, NO_MENU, ""};
Menu settingsScr = {5, 11, NO_MENU, ""};
Menu aboutScr = {6, 3, NO_MENU, ""};
Menu tipConfigScr = {7, CONFIRM, NO_MENU, ""};
//Menu sysInfo = {7, 3, 3, "SYS INFO"};


// Home界面
// 当前温度
Menu currentTempInfo = {8, CONFIRM, 9, ""};
// 休眠
Menu dormancySw = {9, CONFIRM, 10, ""};
// 快速升温
Menu fastHeatSw = {10, CONFIRM, 8, ""};

// 设置界面中的菜单
Menu volumeSet = {11, CONFIRM, 12, "Volume: "};
Menu brightnessSet = {12, CONFIRM, 13, "Brightness: "};
Menu screenRotate = {13, CONFIRM, 14, "Screen Rotate: "};
Menu initTempSet = {14, CONFIRM, 15, "Init Temperature: "};
Menu tempStepSet = {15, CONFIRM, 16, "Temperature Step: "};
Menu dormancyTempSet = {16, CONFIRM, 17, "Dormancy Temperature: "};
Menu staticDormancySecsSet = {17, CONFIRM, 18, "Static Dormancy Secs: "};
Menu dormancyMinsSet = {18, CONFIRM, 19, "Dormancy Mins: "};



#define ESP8285HEAT_MENU_H

#endif //ESP8285HEAT_MENU_H
